# -*- coding: utf-8 -*-
"""RecSys.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qfquFdtLbFpHSjB8lpZj6ca8h1_ZWmgb

# ðŸŽ¬ Movie Recommendation System
### âœ… Objective:
Build a Recommendation System using Matrix Factorization (SVD) to predict user ratings and recommend movies.
"""

# step 1: Install Surprise
!pip install scikit-surprise

# step 2: Import Libraries
import pandas as pd
import numpy as np
from surprise import Dataset, Reader, SVD
from surprise.model_selection import train_test_split
from surprise.accuracy import rmse

# step 3: Load the Dataset
# Load built-in dataset (MovieLens 100k)
data = Dataset.load_builtin('ml-100k')

# Split into train and test sets
trainset, testset = train_test_split(data, test_size=0.2, random_state=42)

# step 4: Train the SVD Model
# Initialize SVD model
model = SVD()

# Train on the training set
model.fit(trainset)

# step 5: Evaluate the Model
# Predict on test data
predictions = model.test(testset)

# Calculate RMSE (Root Mean Squared Error)
rmse(predictions)

# step 6: Generate Recommendations for a User
# Get all unique movie IDs
all_movie_ids = set([pred.iid for pred in predictions])

# Recommend movies not already rated by the user
def recommend_movies(user_id, model, n=5):
    user_rated_movies = [pred.iid for pred in predictions if pred.uid == user_id]
    unrated_movies = [movie for movie in all_movie_ids if movie not in user_rated_movies]

    recommendations = []
    for movie_id in unrated_movies:
        pred = model.predict(user_id, movie_id)
        recommendations.append((movie_id, pred.est))

    # Sort by predicted rating
    recommendations.sort(key=lambda x: x[1], reverse=True)
    return recommendations[:n]

# Example: Get top 5 recommendations for user '196'
top_recs = recommend_movies('196', model)
print("Top 5 recommendations for user 196:")
for movie_id, rating in top_recs:
    print(f"Movie ID: {movie_id}, Predicted Rating: {rating:.2f}")